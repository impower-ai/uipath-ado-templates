#presumes the existence of a repository resource named 'target' with a project.json in the root directory
#presumes the existence of a repository resource named 'impower' with relevant scripts
parameters:
  - name: service_connection
    type: string
  - name: azure_environment
    type: string
  - name: orchestrator_folder
    type: string
  - name: trace_level
    type: string
    default: "Warning"
  - name: stage_name
    type: string
  - name: stage_dependencies
    type: object
    default: {}
  - name: main_only
    type: boolean
    default: false
  - name: use_hosted_agent
    type: boolean
    default: true
  - name: csvFile
    type: string
    default: "assets_deploy.csv"
  - name: target_resource_name
    type: string
    default: "target"

stages:
  - ${{ if or(not(parameters.main_only),eq(variables['Build.SourceBranchName'], 'main')) }}:
      - stage: ${{ parameters.stage_name }}
        ${{ if parameters.use_hosted_agent }}:
          pool:
            vmImage: "windows-latest"
        displayName: ${{ replace(parameters.stage_name,'_',' ') }}
        dependsOn: "${{ parameters.stage_dependencies }}"
        condition: succeeded()
        jobs:
          - deployment: Deploy_${{ parameters.stage_name }}
            ${{ if not(parameters.use_hosted_agent) }}:
              workspace:
                clean: all
            displayName: ${{ replace(parameters.stage_name,'_',' ') }}
            environment: ${{ parameters.azure_environment }}
            strategy:
              runOnce:
                deploy:
                  steps:
                    - checkout: ${{ parameters.target_resource_name }}
                      displayName: "Checkout Target Repository"
                      path: target
                    - task: UiPathAssets@5
                      inputs:
                        orchestratorConnection: ${{ parameters.service_connection }}
                        assetActionType: "Deploy"
                        folderName: ${{ parameters.orchestrator_folder }}
                        csvFile: "$(Agent.BuildDirectory)\\target\\${{ parameters.csvFile }}"
                        traceLevel: ${{ parameters.trace_level }}
