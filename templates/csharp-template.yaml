#DEPRECATED 1/17/21 - Use 'csharp-build.yaml' instead
parameters:
  - name: project_pattern
    type: string
    default: "*.csproj"
  - name: folder
    type: string
  - name: uipath_environment
    type: string
  - name: deploy_environment
    type: string
  - name: stage_name
    type: string
  - name: artifact_path
    type: string
    default: "CSharp Package"
  - name: sdk_version
    type: string
    default: ''
  - name: target_resource_name
    type: string
    default: 'target'
  - name: use_hosted_agent
    type: boolean
    default: true

stages:
  - stage: Build
    variables:
      ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
        nupkgversion: '$(Build.BuildNumber)'
      ${{ else }}:
        nupkgversion: '$(Build.BuildNumber)-alpha'
    ${{ if parameters.use_hosted_agent }}:
      pool:
        vmImage: 'windows-latest'
    displayName: Build
    jobs:
    - job: Build
      steps:
      - checkout: impower
        name: Checkout_Impower
        displayName: 'Checkout Impower Repository'
        path: impower
      - checkout: ${{ parameters.target_resource_name }} 
        name: Checkout_Target_Repository
        displayName: 'Checkout Target Repository' 
        path: target
      - ${{ if parameters.sdk_version }}:
        - task: UseDotNet@2
          displayName: 'Install SDK'
          inputs:
            version: ${{ parameters.sdk_version }}
            includePreviewVersions: true

      - task: DotNetCoreCLI@2
        displayName: 'Restore'
        inputs:
          command: 'restore'
          projects: '$(Agent.BuildDirectory)/target/${{ parameters.project_pattern }}'
          feedsToUse: 'config'
          nugetConfigPath: '$(Agent.BuildDirectory)/impower/other/nuget.config'

      - task: DotNetCoreCLI@2
        displayName: 'Build Solution'
        inputs:
          command: 'build'
          arguments: '-p:Version=$(nupkgversion)'
          projects: '$(Agent.BuildDirectory)/target/${{ parameters.project_pattern }}'
          outputDir: '$(Build.ArtifactStagingDirectory)'
          feedsToUse: 'config'
          configuration: 'Release'
          nugetConfigPath: '$(Agent.BuildDirectory)/impower/other/nuget.config'

      - task: DotNetCoreCLI@2
        displayName: 'Pack Solution'
        env:
          NUPKG_VERSION : $(nupkgversion)
        inputs:
          command: 'pack'
          packagesToPack: '$(Agent.BuildDirectory)/target/${{ parameters.project_pattern }}'
          nobuild: true
          versioningScheme: 'byEnvVar'
          versionEnvVar: 'NUPKG_VERSION'
          outputDir: '$(Build.ArtifactStagingDirectory)'

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)'
          artifact: '${{ parameters.artifact_path }}'
          publishLocation: 'pipeline'

  - stage: ${{ parameters.stage_name }}
    condition: succeeded()
    jobs:
      - deployment: ${{ parameters.stage_name }}_Deploy
        environment: ${{ parameters.deploy_environment }}
        condition: succeeded()
        strategy:
          runOnce:
            deploy:
              steps:
                - task: UiPathDeploy@5
                  inputs:
                    orchestratorConnection: ${{ parameters.uipath_environment }}
                    packagesPath: '$(Pipeline.Workspace)/${{ parameters.artifact_path }}'
                    folderName: '${{ parameters.folder }}'
                    traceLevel: 'Information'
